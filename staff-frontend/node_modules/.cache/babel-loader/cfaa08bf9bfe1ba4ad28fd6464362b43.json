{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nimport { useHistory } from 'react-router-dom';\nexport function useSignup() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const history = useHistory();\n\n  async function signup(email, password) {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('http://localhost:5000/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      localStorage.setItem('user', JSON.stringify(json));\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n      history.push('/view');\n      window.alert('user registered successfully');\n    }\n  }\n\n  return {\n    signup,\n    isLoading,\n    error\n  };\n}\n\n_s(useSignup, \"khtrduw75q1dnLxiKCCSp5oxN7Y=\", false, function () {\n  return [useAuthContext, useHistory];\n});","map":{"version":3,"names":["useState","useAuthContext","useHistory","useSignup","error","setError","isLoading","setIsLoading","dispatch","history","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload","push","window","alert"],"sources":["C:/Users/walee/Documents/Projects/Staff-mgmt/staff-frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useAuthContext } from './useAuthContext'\r\nimport { useHistory } from 'react-router-dom';\r\nexport function useSignup()  {\r\n  const [error, setError] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(null)\r\n  const { dispatch } = useAuthContext()\r\n  const history = useHistory();\r\n\r\n   async function signup(email, password)  {\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    const response = await fetch('http://localhost:5000/api/user/signup', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ email, password })\r\n    })\r\n    const json = await response.json()\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false)\r\n      setError(json.error)\r\n    }\r\n    if (response.ok) {\r\n      \r\n      localStorage.setItem('user', JSON.stringify(json))\r\n\r\n      \r\n      dispatch({type: 'LOGIN', payload: json})\r\n\r\n      setIsLoading(false)\r\n      history.push('/view')\r\n      window.alert('user registered successfully')\r\n    }\r\n  }\r\n\r\n  return { signup, isLoading, error }\r\n}"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,SAASC,SAAT,GAAsB;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM;IAAEQ;EAAF,IAAeP,cAAc,EAAnC;EACA,MAAMQ,OAAO,GAAGP,UAAU,EAA1B;;EAEC,eAAeQ,MAAf,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAwC;IACvCL,YAAY,CAAC,IAAD,CAAZ;IACAF,QAAQ,CAAC,IAAD,CAAR;IAEA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;MACpEC,MAAM,EAAE,MAD4D;MAEpEC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAF2D;MAGpEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAER,KAAF;QAASC;MAAT,CAAf;IAH8D,CAA1C,CAA5B;IAKA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;IAEA,IAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;MAChBd,YAAY,CAAC,KAAD,CAAZ;MACAF,QAAQ,CAACe,IAAI,CAAChB,KAAN,CAAR;IACD;;IACD,IAAIS,QAAQ,CAACQ,EAAb,EAAiB;MAEfC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B;MAGAZ,QAAQ,CAAC;QAACgB,IAAI,EAAE,OAAP;QAAgBC,OAAO,EAAEL;MAAzB,CAAD,CAAR;MAEAb,YAAY,CAAC,KAAD,CAAZ;MACAE,OAAO,CAACiB,IAAR,CAAa,OAAb;MACAC,MAAM,CAACC,KAAP,CAAa,8BAAb;IACD;EACF;;EAED,OAAO;IAAElB,MAAF;IAAUJ,SAAV;IAAqBF;EAArB,CAAP;AACD;;GAnCeD,S;UAGOF,c,EACLC,U"},"metadata":{},"sourceType":"module"}